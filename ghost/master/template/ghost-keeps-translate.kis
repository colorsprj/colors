#==============================================================================
#
# 「華和梨」イベント処理用簡易スクリプト(Kawari Easy Event Programmed Script)
#  トランスレータ辞書
#
# ＫＥＥＰＳ製作   ：こやま☆あきら
# OpenKEEPS製作    : ＯｐｅｎＫＥＥＰＳプロジェクトチーム
# OpenKEEPSページ  : http://keeps.sourceforge.jp
# Version2.0 beta2  2002.10.12 00:30版
# Version2.0 RC1    2002.10.31 23:00版
# Version2.0 RC2    2002.11.10 22:00版
# Version2.0 RC3    2002.11.25 00:00版
# Version2.0        2002.12.01 00:00版
# Version2.1.0      2003.01.03 12:00版
# Version2.1.1      2003.01.26 23:00版
# Version2.1.2      2003.03.03 23:00版
# Version2.2        2003.04.01 00:00版
# Version2.2.1      2003.04.14 22:00版
# Version2.2.2      2003.05.01 18:00版
# Version2.2.3      2003.05.18 00:00版
# Version2.2.4      2003.06.16 23:00版
# Version2.2.5      2003.07.31 00:00版
# Version2.3.0 snapshot0309211444 2003.09.21 15:00版
# Version3.0.0      2004.06.06 00:00版
#
#==============================================================================
# 動作対象：「華和梨」Phase 8.1.0 及び上位互換版
#           「何か」（現「伺か」）MATERIA period 583 以上
#           CROW、SSP、ninix、偽林檎での動作を考慮
#==============================================================================

#トランスレートイベント(OnTranslate)===========================================
#置換対象の文章が、System.Request.Reference0に入っています。
#Translateエントリの単語は、全て評価されます。
#各単語を評価すると、戻り値を再びSystem.Request.Reference0に代入し、
#次の単語を評価します。
#一番最後の単語を評価し終わったら、最後の戻り値を本体に返します。
#単語は辞書記述順に評価します。

# このようにMakotoコマンドを使うと、簡単に記述できます。
# ただし、\0ブロック、\1ブロックの区別無く置換しますので、ご注意あれ。
#Translate : 

#トランスレータは、FlagModeを意識します。
#Another.Translate : $(Makoto "だよ。" "だにょ。")
#Another.Translate : $(Makoto "の？" "にょ？")
#Another.Translate : $(Makoto "！\1" "！\n目からビーム！\n\1"
#Another.Translate : $(Makoto "！\e" "！\n目からビーム！\e"

#==============================================================================
