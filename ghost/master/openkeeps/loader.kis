#==============================================================================
#
# 「華和梨」イベント処理用簡易スクリプト(Kawari Easy Event Programmed Script)
#  システムローダ
#
# ＫＥＥＰＳ製作   ：こやま☆あきら
# OpenKEEPS製作    : ＯｐｅｎＫＥＥＰＳプロジェクトチーム
# OpenKEEPSページ  : http://keeps.sourceforge.jp
# Version3.0.0      2004.06.06 00:00版
# Version3.0.2      2004.06.19 23:30版
# Version3.0.3      2004.06.20 18:30版
# Version3.0.5      2004.07.03 11:30版
# Version3.0.8      2004.07.25 21:45版
# Version3.1.0      2004.09.12 14:00版
# Version3.1.4      2004.10.30 22:45版
# Version3.1.5      2004.11.13 20:30版
# Version3.1.7      2004.12.19 21:30版
# Version3.1.8      2004.12.26 18:30版
# Version3.3.0a8    2005.11.06 17:30版
#
#==============================================================================
# 動作対象：「華和梨」Phase 8.2.0 及び上位互換版
#           「何か」（現「伺か」）MATERIA period 583 以上
#           CROW、SSP、ninix、偽林檎での動作を考慮
#==============================================================================

# 辞書のディレクトリ内再帰読み込み
=kis
function RecursiveLoad $(
	if $[ $(.size @arg) != 3 ] $(return);

	.readdir @template $(.cncpath $@arg[1]);
	if $(.size @template) $(
		foreach @f @template $(
			.setstr @lf $(.tolower ${@f});
			.setstr @path $(.cncpath $@arg[1] ${@f});
			if $[ $(.match_at $(.reverse ${@lf}) "sik.") && $(.isfile ${@path}) ] $(
				# テンプレート辞書かもしれない
				foreach @ent TemplatePrefix $(
					if $(.match_at ${@lf} $(.tolower ${@ent})) $(
						# テンプレート辞書だった
						.pushstr @templatedictionary ${@path};
						break;
					);
				);
			) else if $[ $(.isdir ${@path}) && $@arg[2] != 1 ] $(
				# ディレクトリだった
				.pushstr @subdir ${@path};
			);
		);
	);
	if $[ ${kp.config.usesubdirfirst} && $(.size @subdir) ] $(
		# サブディレクトリを再帰読み込み
		foreach @path @subdir $(RecursiveLoad ${@path} $@arg[2]);
	);
	# ディレクトリ再起読み込み後、テンプレート辞書をまとめて読み込む
	if $(.size @templatedictionary) $(
		foreach @path @templatedictionary $(
			.logprint "[load: TemplateDictionary("${@path}")]";
			.load ${@path};
		);
	);
	if $[ ! ${kp.config.usesubdirfirst} && $(.size @subdir) ] $(
		# サブディレクトリを再帰読み込み
		foreach @path @subdir $(RecursiveLoad ${@path} $@arg[2]);
	);
);
=end

#ファイル読み込み==============================================================

=kis
.logprint "[start: OpenKEEPS loader Ver.1.3.4 ]";
# Ghost ID生成(ランダム生成の32桁の16進数)
.setstr kp.gid $(
	loop 32 $(.char_at "0123456789abcdef" $(.rand 16));
);
.logprint "[set: Ghost ID = '"${kp.gid}"']";
.writeprotect kp.gid;

# configファイル読み込み
.logprint "[load: OpenKEEPS config]";
.cleartree kp.config;
.load openkeeps.kis;

# 対象ディレクトリ決定
.setstr @dir $(if $(.size OpenKEEPSDir) $OpenKEEPSDir[0] else "openkeeps");
if $[ $(.size TemplateDir) == 0 ] $(.setstr TemplateDir "template");
if $[ $(.size TemplatePrefix) == 0 ] $(.setstr TemplatePrefix "ghost-keeps");
if $[ $(.size SaoriDir) == 0 ] $(.setstr SaoriDir "saori");
.logprint "[set: OpenKEEPS Directory = '"${@dir}"']";
.logprint "[set: TemplateDictionary Directory = '"$(.join TemplateDir "', '")"']";
.logprint "[set: TemplateDictionary Prefix = '"$(.join TemplatePrefix "', '")"']";
.logprint "[set: SAORI Directory = '"$(.join SaoriDir "', '")"']";

# デフォルトのconfigを読み込む
.logprint "[load: OpenKEEPS config(default)]";
.load $(.cncpath ${@dir} dict-keeps-default.kis);

# 基本システムファイル読み込み
.logprint "[load: OpenKEEPS basic middleware system]";
.load $(.cncpath ${@dir} ktm-kernel.kis);
.load $(.cncpath ${@dir} dict-system.kis);

# SAORI Universalの自動ロード
if ${kp.config.usesaoriautoload} $(
	foreach @saoridir SaoriDir $(
		.readdir @saori $(.cncpath ${@saoridir});
		if $(.size @saori) $(
			foreach @f @saori $(
				if $(.match_at $(.tolower $(.reverse ${@f})) "lld.") $(
					.setstr @alias $(.encode_entryname $(.substr ${@f} 0 $[ $(.length ${@f}) - 4 ]));
					.logprint "[load: SAORI("${@f}") as '"${@alias}"']";
					.saoriregist $(.cncpath ${@saoridir} ${@f}) ${@alias};
					.eval "$(function Saori."${@alias}" $(.clear @arg[0] ; .xargs @arg .callsaori "${@alias}"))";
					.eval "$(function Saorix."${@alias}" $(.clear @arg[0] ; .xargs @arg .callsaorix "${@alias}"))";
				);
			);
		);
	);
);

# OpenKEEPSシステムファイル読み込み
.logprint "[load: OpenKEEPS middleware system]";
.load $(.cncpath ${@dir} dict-keeps-system.kis);
.load $(.cncpath ${@dir} dict-keeps-baseevent.kis);
.load $(.cncpath ${@dir} dict-keeps-etcevent.kis);
.load $(.cncpath ${@dir} dict-keeps-winlocal.kis);
.load $(.cncpath ${@dir} dict-keeps-comm.kis);
.load $(.cncpath ${@dir} dict-keeps-keypress.kis);
.load $(.cncpath ${@dir} dict-keeps-translate.kis);

# プラグイン辞書ファイル読み込み
.readdir @plugin $(.cncpath ${@dir}\plugin);
if $(.size @plugin) $(
	foreach @dic @plugin $(
		.setstr @f $(.cncpath ${@dir}\plugin ${@dic});
		if $[ $(.match_at $(.tolower $(.reverse ${@f})) "sik.") && $(.isfile ${@f}) ] $(
			.logprint "[load: OpenKEEPS Plugin dictionary("${@dic}")]";
			.load $(.cncpath ${@dir}\plugin ${@dic});
		);
	);
);

# 「debugger on」の時、コマンドラインデバッグ用辞書をロードする
if $[ ${System.Debugger} == "on" ] $(
	.logprint "[load: command line event debugger dictionary]";
	.load $(.cncpath ${@dir} callbackdebug.kis);
);

# テンプレート辞書読み込み
if ${kp.config.usetemplateautoload} $(
	foreach @tpdir TemplateDir $(
		RecursiveLoad ${@tpdir} ${kp.config.usetemplatedironly};
	);
	rmfunc RecursiceLoad;
);

.logprint "[end: OpenKEEPS loader]";
=end

#==============================================================================
